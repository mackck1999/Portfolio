package Kursovaya;

import java.util.Scanner;

public class Six {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.print("Введите 9 элементов: ");
        int arr[] = new int[9]; //пусть будет массив из 9 символов целого типа
        for (int i = 0; i < 9; i++) { //вводим их
            arr[i] = in.nextInt();
        }
        in.close();
        QSort(arr, 0, arr.length - 1); //сортируем(начальная левая граница равна самому первому
        //элементу, а начальная правая самому последнему)

        Output(arr);
    }

    public static void swap(int[] arr, int ind1, int ind2) { //функция обмена значениями
        //двух элементов массива. Принимает массив, индекс первого и индекс второго.
        int r = arr[ind1]; //присваиваем временной переменной элемент с первым индексом
        arr[ind1] = arr[ind2]; //элементу с первым индексом присваиваем значение элемента
        //						со вторым индексом
        arr[ind2] = r; //элементу со вторым индексом присваиваем значение временного
    }

    public static void QSort(int[] arr, int lo, int hi) { //функция сортировки Хоара
        //	принимает массив, самый левый его индекс, самый правый
        if (lo >= hi) { //если левый больше или равен правому, завершает работу
            return;
        }
        int pivot = arr[lo]; //принимаем самый левый за элемент отсчета
        int i = lo - 1; //"указатель" слева на перебираемый элемент, изначально устанавливается
        //					даже левее самого первого
        int j = hi + 1; //с правым аналогично
        while (1 > 0) { //бесконечный цикл
            do { //выполнять итерирование левого "указателя"
                i = i + 1;
            } while (arr[i] < pivot); //пока его значение меньше отсчетного

            do { //справа так же
                j = j - 1;
            } while (arr[j] > pivot);

            if (i >= j) { //если указатели встретились
                break; //то выходим из цикла
            }

            swap(arr, i, j); //каждый раз меняем значения под указателями местами
        }
        QSort(arr, lo, j); //для левой половинки
        QSort(arr, j + 1, hi); //и для правой половинки
    }

    public static void Output(int arr[]) { //вывод массива
        System.out.print("Вывод: ");
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}
